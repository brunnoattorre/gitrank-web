# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

GET         /                                                             @controllers.ApplicationController.index
GET         /github/:owner/:repository                                    @controllers.ApplicationController.gitHubRepository(owner, repository, page: Option[Int])
GET         /github/:owner/:repository/lastFeedback                       @controllers.PublicAPIController.getLast100Feedback(owner, repository)
GET         /github/:owner/:repository/feedback                           @controllers.ApplicationController.giveFeedbackPage(owner, repository)
POST        /github/:owner/:repository/feedback                           @controllers.ApplicationController.postScore(owner, repository, update: Option[Boolean])
POST        /github/:owner/:repository/quickstart                         @controllers.ApplicationController.postQuickstartGuide(owner, repository)
POST        /github/:owner/:repository/quickstart/:title/:voteType        @controllers.ApplicationController.upVote(owner, repository,title,voteType)
GET         /github/:owner/:repository/quickstart                         @controllers.ApplicationController.createGuidePage(owner, repository)
GET         /github/:owner/:repository/quickstart/guides                  @controllers.PublicAPIController.getGuides(owner, repository)


GET         /authenticate/:provider                                       @controllers.SocialAuthController.authenticate(provider)

GET         /api/badges/github/:owner/:repo.svg                @controllers.PublicAPIController.getScoreBadge(owner, repo)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                 controllers.Assets.at(path="/public", file)
GET         /webjars/*file                                                controllers.WebJarAssets.at(file)

